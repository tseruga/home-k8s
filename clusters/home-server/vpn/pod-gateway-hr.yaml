---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vpn-gateway
  namespace: vpn
  labels:
spec:
  interval: 1m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: pod-gateway
      version: 5.4.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
      interval: 1m

  # See https://github.com/k8s-at-home/charts/blob/master/charts/pod-gateway/values.yaml
  values:
    routed_namespaces:
      - downloads
    settings:
      VPN_INTERFACE: wg0
      VXLAN_ID: 43
      NOT_ROUTED_TO_GATEWAY_CIDRS: "172.16.0.0/12 10.0.0.0/8 192.168.0.0/16"
      VPN_LOCAL_CIDRS: "172.16.0.0/12 10.0.0.0/8 192.168.0.0/16"
  addons:
      vpn:
        enabled: true
        # This Should be set to `openvpn`. This will set the add-on to use the default settings for OpenVPN based connections.
        type: openvpn

        openvpn:
          # This gets read by the Helm chart. The default OpenVPN image reads this and uses it to connect to the VPN provider.
          authSecret: openvpn-auth

#         # If the podSecurityContext is set to run as a different user, make sure to run the OpenVPN container as root. 
#         # This is required for it to be able to read certain configuration files. 
#         securityContext:
#           runAsGroup: 0
#           runAsUser: 0

#         env:
#           # Set this environment variable to 'on' to make sure all traffic gets routed through the VPN container.
#           # Make sure to check the other environment variables for the OpenVPN image to see how you can exclude certain
#           # traffic from these firewall rules.
#           FIREWALL: 'on'

#         # The .ovpn file provided by your VPN provider goes here.
#         #
#         # Any CA / certificate must either be placed inline, or provided through an additionalVolumeMount so that OpenVPN can find it.
#         #
#         # Pay close attention to the last 3 lines in this file. They must be added if you wish to run a script when the connection
#         # is opened / closed.
        configFileSecret: openvpn-config

#         # The scripts that get run when the VPN connection opens/closes are defined here.
#         # The default scripts will write a string to represent the current connection state to a file.
#         # Our qBittorrent image has a feature that can wait for this file to contain the word 'connected' before actually starting the application.
#         scripts:
#           up: |-
#             #!/bin/bash
#             /etc/openvpn/up.sh
#             echo "connected" > /shared/vpnstatus

#           down: |-
#             #!/bin/bash
#             /etc/openvpn/down.sh
#             echo "disconnected" > /shared/vpnstatus